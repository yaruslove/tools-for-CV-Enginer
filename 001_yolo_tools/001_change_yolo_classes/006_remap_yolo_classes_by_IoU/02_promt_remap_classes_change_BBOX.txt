Задача изменить разметку YOLO detection написать скрипт

У меня есть размеченный YOLO datection датасет со следующими классами:

classes.txt

```txt
01_Person
02_Head
03_Helmet
```

01_Person <class_id> = 0
02_Head <class_id> = 1
03_Helmet <class_id> = 2


Пример одной из разметки существующего для файла pexels-photo-7688155.txt под классы as_is_classes
```
1 0.467101 0.250911 0.136979 0.236719
2 0.467101 0.217708 0.138021 0.171875
0 0.567535 0.473437 0.540972 0.682813
```

Мне нужно написать скрипт который изменит существующие файлы labels yolo разметки.

1) Основная задача в рамках каждого файла разметки читается каждый файл labels, далее бежим по каждому bbox смотрим класс
2) Если класс = 03_Helmet если по порядковому номеру согласно classes.txt то <class_id> = "2" то для этого класса ищется в этом же файле другой bbox c классом 02_Head , <class_id> = "1".
Условия поиска для каждого класса "03_Helmet"  проверяется условие ищется самый большое значение Intersection over Union (IoU). Тоесть в числителе Area Overlap текущего 03_Helmet AND 02_Head в знаменателе площадь Union Area 03_Helmet AND 02_Head 
Мы получили "пару" 02_Head и 03_Helmet. Далее когда мы нашли для каждого bbox 03_Helmet его пару 02_Head. 
То если эта пара найдена мы должны box 03_Helmet удалить полностью эту строчку (bbox) из разметки 
при этом из этой же пары 02_Head мы должны поменять класс 02_Head=>03_Helmet или в терминах  <class_id> 1=>2.
Если пара для 03_Helmet не найдена мы просто оставляем без пары и ничего больше с этим bbox разметкой не делаем 


src_annot_dir - директория с файлами labels расширение .txt  YOLO которые нужно изменить и пересохранить в dst_annot_dir
dst_annot_dir - пустая директория с файлами labels внутри будут расширение .txt YOLO в которую нужно пересохранить по ниже описаному алгоритму

Формат yolo
{
<class_id> <x_center> <y_center> <width> <height>
class_id   Целое число, обозначающее класс объекта (начинается с 0).  Пример: если у вас 3 класса (car, person, dog), их индексы: 0, 1, 2.
x_center, y_center   Нормализованные координаты центра bounding box'а относительно ширины/высоты изображения.  
width, height    Нормализованные ширина и высота bounding box'а относительно размеров изображения.  
Важные особенности 
    Все значения (x_center, y_center, width, height) лежат в диапазоне [0, 1].
    Координаты отсчитываются от левого верхнего угла изображения (0, 0 — левый верх, 1, 1 — правый низ).
    Если объект частично выходит за границы изображения, координаты всё равно нормализуются и остаются в пределах [0, 1].
}




Скрипт читает config.yaml

```yaml
src_annot_dir: "./src_data/labels"
dst_annot_dir: "./dst_data/labels"
```


