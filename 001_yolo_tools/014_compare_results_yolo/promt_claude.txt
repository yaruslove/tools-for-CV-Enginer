Необходимо написать сркрипт сравнения результатов детектора yolo. Дана директория, внутри которой есть директории с резултатами экспремента. Внутри results есть пакпи train,train1,train2. Может быть пропущенна любая по порядку директория например train1 а train, train2 будет. В папки train.. которую сохранняется результат yolo v11 ultralitics. В каждой папке train.. находится файлы args.yaml, results.csv во вложении. Нужно создать табличку "table_01" которая будет состоять из колонок. 1 Первая колонка название папки train0,1,2,3 2 Вторая колонка model которая заполняется из файла args.yaml берется значение по ключу model там будет такие значения одно из как yolo11s.pt yolo11n.pt yolo11l.pt 3 Третья колонка из файла args.yaml => imgsz пример значения 1024. Назване колонки "imgsz" 4 Четвертая колонка из файла args.yaml => epochs пример значения 240. Назване колонки "epochs" 5 Пятая колонка из файла args.yaml => batch пример значения 16. Назване колонки "batch" 6 Шестая колонка из файла args.yaml => batch пример значения 16. Назване колонки "batch"
Далее следующие колонки нужно заполнить обработав файла results.csv В каждой папке train.. нужно выбрать отсортировать строчку где максимальная метрика metrics/mAP50-95(B). Добавить в нашу "table_01" в следующие коллнки из файла results.csv выбрать из строчки где максимальная metrics/mAP50-95(B) 7 выбрать значени "epoch" колнку соотвувующую в "table_01" назвать "best_epoch" 8 выбрать значени "train/box_loss" колнку соотвувующую в "table_01" назвать "train/box_loss" 9 выбрать значени "train/cls_loss" колнку соотвувующую в "table_01" назвать "train/cls_loss" 10 выбрать значени "train/dfl_loss" колнку соотвувующую в "table_01" назвать "train/dfl_loss" 11 выбрать значени "train/cls_loss" колнку соотвувующую в "table_01" назвать "train/cls_loss" В остальные колонки добавить соотвествующие метрики metrics/precision(B) metrics/recall(B) metrics/mAP50(B) metrics/mAP50-95(B) val/box_loss val/cls_loss val/dfl_loss

Для второй задачи подумай где, как с помощтю какого готового иснтумента, фреймворка библиотеки можно отрисовтаь вихуализировать графики быстро много. Возможные инструменты предположим можно выбрать один из них: а) Plotly + Dash б) Streamlit в) Bokeh
Вторая задача из всех папок train, train1, train.. взять results.csv и построить графики. По оси x всегда будут откладыватся epoch из results.csv. По оси y будет братся одна из колонок train/box_loss train/cls_loss train/dfl_loss metrics/precision(B) metrics/recall(B) metrics/mAP50(B) metrics/mAP50-95(B) val/box_loss val/cls_loss val/dfl_loss lr/pg0 lr/pg1 lr/pg2 файла results.csv и строится графики. 001 Первые данные -графики, тоесть первая ось координат на нем будут данные графиков из всех train../results.csv По оси x epoch, по y train/box_loss из всех эксперементов train, train1, train2 итд. В легенде граифка разными цветами будут обозначенны train, train1, train2 ...
002 Вторые данные -графики, тоесть первая ось координат на нем будут данные графиков из всех train../results.csv По оси x epoch, по y train/cls_loss из всех эксперементов train, train1, train2 итд. В легенде граифка разными цветами будут обозначенны train, train1, train2 ...

Последнаяя данные -графики, тоесть первая ось координат на нем будут данные графиков из всех train../results.csv По оси x epoch, по y lr/pg2 из всех эксперементов train, train1, train2 итд. В легенде граифка разными цветами будут обозначенны train, train1, train2 ... 

На вход скрипт должен принимать вычитывать из файла config.yaml данные 
src: results/..
dst: save/..

src - путь где лежат эксперементы train, train1, train 2
dst - путь с сохраненной  "table_01" csv  и графиками файлами запуска графиков